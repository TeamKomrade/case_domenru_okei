// <auto-generated />
using System;
using CaseDomenru.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CaseDomenru.Migrations
{
    [DbContext(typeof(CaseDomenruDB))]
    partial class CaseDomenruDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CaseDomenru.Data.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(96)");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(96)");

                    b.Property<string>("Patronymic")
                        .HasColumnType("varchar(96)");

                    b.HasKey("PersonID");

                    b.ToTable("People");
                });

            modelBuilder.Entity("CaseDomenru.Data.UniqueKey", b =>
                {
                    b.Property<int>("UniqueKeyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KeyCreatorID")
                        .HasColumnType("int");

                    b.Property<string>("UniqueKeyString")
                        .HasColumnType("varchar(128)");

                    b.HasKey("UniqueKeyID");

                    b.HasIndex("KeyCreatorID")
                        .IsUnique();

                    b.ToTable("UniqueCodes");
                });

            modelBuilder.Entity("CaseDomenru.Data.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonID")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("UniqueCodeID")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.HasIndex("PersonID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CaseDomenru.Data.UniqueKey", b =>
                {
                    b.HasOne("CaseDomenru.Data.User", "User")
                        .WithOne("UniqueCode")
                        .HasForeignKey("CaseDomenru.Data.UniqueKey", "KeyCreatorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CaseDomenru.Data.User", b =>
                {
                    b.HasOne("CaseDomenru.Data.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonID");
                });
#pragma warning restore 612, 618
        }
    }
}
